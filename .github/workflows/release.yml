on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

env:
  # Could, potentially automatically parse
  # the bin name, but let's do it automatically for now.
  RELEASE_BIN: gh-actions-template

  # Space separated paths to include in the archive.
  # Start relative paths with a dot if you don't want
  # paths to be preserved. Use "/" as a delimiter.
  RELEASE_ADDS: README.md LICENSE


jobs:
  build:
    name: Build release

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [windows]
        include:
          - build: windows
            os: windows-latest
            rust: stable

    steps:
      - uses: actions/checkout@v1

      - name: Install Rust (rustup)
        run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
        if: matrix.os != 'macos-latest'
        shell: bash

      - name: Build
        run: cargo build --verbose --release

      - name: Create artifact directory
        run: mkdir artifacts

      - name: Create archive for Windows
        run: 7z a -tzip ./artifacts/${{ env.RELEASE_BIN }}-windows-x86_64.zip ./target/release/${{ env.RELEASE_BIN }}.exe ${{ env.RELEASE_ADDS }}
        if: matrix.os == 'windows-latest'

      # This will double-zip
      # See - https://github.com/actions/upload-artifact/issues/39
      - uses: actions/upload-artifact@v1
        name: Upload archive
        with:
          name: ${{ runner.os }}
          path: artifacts/